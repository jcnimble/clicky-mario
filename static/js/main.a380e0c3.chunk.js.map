{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/NavBar/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","imageClick","alt","name","src","image","id","Wrapper","children","Title","NavBar","class","score","highscore","App","state","friends","clickedFriends","event","currentFriend","target","console","log","_this","indexOf","alert","concat","setState","sort","b","Math","random","gameOver","this","forEach","friend","count","_this2","components_NavBar","components_Title","components_Wrapper","map","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"s9CAYeA,MATf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAASL,EAAMM,YAC5CL,EAAAC,EAAAC,cAAA,OAAKI,IAAKP,EAAMQ,KAAMC,IAAKT,EAAMU,MAAOC,GAAIX,EAAMW,aCCzCC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCU1BC,MAXf,SAAed,GACb,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,qBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,qFCSSW,MAdf,SAAgBf,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,eACAH,EAAAC,EAAAC,cAAA,QAAMa,MAAM,eAAZ,4BAGAf,EAAAC,EAAAC,cAAA,QAAMa,MAAM,eAAZ,UACQhB,EAAMiB,MADd,kBACoCjB,EAAMkB,oBCyFvCC,6MA3FbC,MAAQ,CACNC,UACAC,eAAgB,GAChBL,MAAO,EACPC,UAAW,KAIbZ,WAAa,SAAAiB,GACX,IAAMC,EAAgBD,EAAME,OAAOlB,IACnCmB,QAAQC,IAAI,UAEVC,EAAKR,MAAME,eAAeO,QAAQL,IAAkB,GAIpDM,MAAK,gCAAAC,OAAiCH,EAAKR,MAAMH,QACjDW,EAAKI,SAAS,CACZX,QAASO,EAAKR,MAAMC,QAAQY,KAAK,SAAU/B,EAAGgC,GAC5C,MAAO,GAAMC,KAAKC,WAEpBd,eAAgB,GAChBL,MAAO,IAERW,EAAKS,YAINT,EAAKI,SACH,CACEX,QAASO,EAAKR,MAAMC,QAAQY,KAAK,SAAU/B,EAAGgC,GAC5C,MAAO,GAAMC,KAAKC,WAEpBd,eAAgBM,EAAKR,MAAME,eAAeS,OACxCP,GAEFP,MAAOW,EAAKR,MAAMH,MAAQ,GAG5B,WAC2B,KAArBW,EAAKR,MAAMH,QACba,MAAK,8BACLF,EAAKI,SAAS,CACZX,QAASO,EAAKR,MAAMC,QAAQY,KAAK,SAAU/B,EAAGgC,GAC5C,MAAO,GAAMC,KAAKC,WAEpBd,eAAgB,GAChBL,MAAO,IAETW,EAAKS,iBAOfA,SAAW,WAWT,OAVIT,EAAKR,MAAMH,MAAQW,EAAKR,MAAMF,WAChCU,EAAKI,SAAS,CAACd,UAAWU,EAAKR,MAAMH,OAAQ,WAC3CS,QAAQC,IAAIW,KAAKlB,MAAMF,aAG3BU,EAAKR,MAAMC,QAAQkB,QAAQ,SAAAC,GACzBA,EAAOC,MAAQ,IAGjBb,EAAKI,SAAS,CAACf,MAAO,KACf,2EAGA,IAAAyB,EAAAJ,KACP,OACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwC,EAAD,CAAQ1B,MAAOqB,KAAKlB,MAAMH,MAAOC,UAAWoB,KAAKlB,MAAMF,YACvDjB,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAC0C,EAAD,KACGP,KAAKlB,MAAMC,QAAQyB,IAAI,SAAAN,GAAM,OAC5BvC,EAAAC,EAAAC,cAAC4C,EAAD,CACEzC,WAAYoC,EAAKpC,WACjBK,GAAI6B,EAAO7B,GACXqC,IAAKR,EAAO7B,GACZH,KAAMgC,EAAOhC,KACbE,MAAO8B,EAAO9B,mBAnFVuC,mBCHlBC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a380e0c3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"img-thumbnail\" onClick={props.imageClick}>\n      <img alt={props.name} src={props.image} id={props.id} />\n    </div>\n\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n  <div className=\"jumbotron jumbotron-fluid\">\n    <div className=\"container\">\n      <h1 className=\"display-4\">Mario Clicky Game</h1>\n      <p className=\"lead\">Click on an image to earn points, but don't click on any more than once!</p>\n    </div>\n  </div>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction NavBar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <span className=\"navbar-brand mb-0 h1\">Clicky Game</span>\r\n            <span class=\"navbar-text\">\r\n                Click an image to begin!\r\n            </span>\r\n            <span class=\"navbar-text\">\r\n            Score: {props.score} | High Score: {props.highscore}\r\n            </span>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport NavBar from \"./components/NavBar\";\nimport friends from \"./friends.json\";\n\n//sets state to 0 or empty\nclass App extends Component {\n  state = {\n    friends,\n    clickedFriends: [],\n    score: 0,\n    highscore: 0\n  };\n\n  //when you click on a card ... the friend is taken out of the array\n  imageClick = event => {\n    const currentFriend = event.target.alt;\n    console.log(\"click!\");\n    const FriendAlreadyClicked =\n      this.state.clickedFriends.indexOf(currentFriend) > -1;\n\n    //if you click on a friend that has already been selected, the game is reset and cards reordered\n    if (FriendAlreadyClicked) {\n      alert(`Sorry! You lose. Your Score: ${this.state.score}`);\n      this.setState({\n        friends: this.state.friends.sort(function (a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedFriends: [],\n        score: 0\n      });\n       this.gameOver();\n\n      //if you click on an available friend, your score is increased and cards reordered\n    } else {\n      this.setState(\n        {\n          friends: this.state.friends.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedFriends: this.state.clickedFriends.concat(\n            currentFriend\n          ),\n          score: this.state.score + 1\n        },\n        //if you get all 12 friends correct you get a congrats message and the game resets        \n        () => {\n          if (this.state.score === 12) {\n            alert(`You Got Them All! You Win!`);\n            this.setState({\n              friends: this.state.friends.sort(function (a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedFriends: [],\n              score: 0\n            });\n            this.gameOver();\n          }\n        }\n      );\n    }\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.friends.forEach(friend => {\n      friend.count = 0;\n    });\n    // alert(`Game Over! Your score: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar score={this.state.score} highscore={this.state.highscore}></NavBar>\n        <Title></Title>\n        <Wrapper>\n          {this.state.friends.map(friend => (\n            <FriendCard\n              imageClick={this.imageClick}\n              id={friend.id}\n              key={friend.id}\n              name={friend.name}\n              image={friend.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}